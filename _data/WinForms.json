{"Data":{"GitHub":{"Issues":[{"Id":"614707427","IsPullRequest":true,"CreatedAt":"2020-05-11T03:21:28","Actor":"dotnet-maestro[bot]","Number":"3241","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200509.5\r\n- **Date Produced**: 5/9/2020 10:31 PM\r\n- **Commit**: e18250bd8f23f85f670599177118d6b957f9a3dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3241)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3241","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3241)"},{"Id":"615478256","IsPullRequest":false,"CreatedAt":"2020-05-10T21:16:46","Actor":"hughbe","Number":"3252","RawContent":null,"Title":"AppActivate_ProcessId fails locally","State":"open","Body":"```\r\nA total of 1 test files matched the specified pattern.\r\n[xUnit.net 00:00:02.87]     Microsoft.VisualBasic.IntegrationTests.InteractionTests.AppActivate_ProcessId [FAIL]\r\n  X Microsoft.VisualBasic.IntegrationTests.InteractionTests.AppActivate_ProcessId [584ms]\r\n  Error Message:\r\n   System.FormatException : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\n  Stack Trace:\r\n     at System.Text.ValueStringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.String.Format(IFormatProvider provider, String format, Object[] args)\r\n   at Microsoft.VisualBasic._Interaction.AppActivateHelper(IntPtr hwndApp) in C:\\Users\\hughbe\\Documents\\GitHub\\winforms\\src\\Microsoft.VisualBasic.Forms\\src\\Microsoft\\VisualBasic\\Interaction.vb:line 204\r\n   at Microsoft.VisualBasic._Interaction.AppActivateByProcessId(Int32 ProcessId) in C:\\Users\\hughbe\\Documents\\GitHub\\winforms\\src\\Microsoft.VisualBasic.Forms\\src\\Microsoft\\VisualBasic\\Interaction.vb:line 137\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.VisualBasic.Interaction.InvokeMethod(String methodName, Object[] args)\r\n   at Microsoft.VisualBasic.Interaction.AppActivate(Int32 ProcessId)\r\n   at Microsoft.VisualBasic.IntegrationTests.InteractionTests.AppActivate_ProcessId() in C:\\Users\\hughbe\\Documents\\GitHub\\winforms\\src\\Microsoft.VisualBasic\\tests\\IntegrationTests\\Microsoft.VisualBasic.IntegrationTests\\InteractionTests.cs:line 21\r\n```\r\n\r\nI suspect this might be causing tests to hang, because I ran some tests locally and I got a visual basic popup saying \"Message\" that didn't go away once the tests finished","Url":"https://github.com/dotnet/winforms/issues/3252","RelatedDescription":"Open issue \"AppActivate_ProcessId fails locally\" (#3252)"},{"Id":"615464902","IsPullRequest":false,"CreatedAt":"2020-05-10T19:59:01","Actor":"M-Lipin","Number":"3251","RawContent":null,"Title":"DataGridViewCell ComboBox causes application crash in some circumstances","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nSometimes DataGridViewComboBox cell causes application crash when changing ComboBox selected values.\r\n\r\n**Expected behavior:**\r\nNo crash.\r\n\r\n**Minimal repro:**\r\n- Create WinForms app with the DataGridView control and ComboBox cell and other cells with different control types.\r\n- Run app and change ComboBox cell selected value.\r\n\r\n**DevDiv issue:**\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1071695","Url":"https://github.com/dotnet/winforms/issues/3251","RelatedDescription":"Open issue \"DataGridViewCell ComboBox causes application crash in some circumstances\" (#3251)"},{"Id":"615413877","IsPullRequest":false,"CreatedAt":"2020-05-10T15:19:52","Actor":"kirsan31","Number":"3250","RawContent":null,"Title":"Clarification about System.Drawing.Font and Dispose","State":"open","Body":"- [Docs](https://docs.microsoft.com/en-us/dotnet/api/system.drawing.font.dispose?view=dotnet-plat-ext-3.1) says nothing unusual here: \r\n> Call Dispose when you are finished using the Font. The Dispose method leaves the Font in an unusable state. After calling Dispose, you must release all references to the Font so the garbage collector can reclaim the memory that the Font was occupying. \r\n \r\n- Designer assigning fonts this way: `someControl.Font = new System.Drawing.Font(...);` and never Dispose them.\r\n \r\n- In .net [Font.Dispose(bool disposing)](https://referencesource.microsoft.com/System.Drawing/R/316bf22f513c0e53.html) has an  `[SuppressMessage(\"Microsoft.Usage\", \"CA2213:DisposableFieldsShouldBeDisposed\")]` attribute. But in core it's [gone](https://source.dot.net/System.Drawing.Common/R/316bf22f513c0e53.html).\r\n\r\n- There are many questions about Font and Dispose on stackoverflow (with variants answers):\r\n[Should I dispose of the old font when changing the font of a control?](https://stackoverflow.com/questions/29103522/should-i-dispose-of-the-old-font-when-changing-the-font-of-a-control)\r\n[How and when is Font disposed for WinForms controls](https://stackoverflow.com/questions/21769908/how-and-when-is-font-disposed-for-winforms-controls)\r\n[Calling dispose() for Font in Windows form](https://stackoverflow.com/questions/22661480/calling-dispose-for-font-in-windows-form)\r\n[Windows Form Fonts Questions Part 1](https://stackoverflow.com/questions/5148476/windows-form-fonts-questions-part-1)\r\nand more...\r\n\r\nIf nothing special here (docs are correct), why Designer never call Font.Dispose then? Otherwise, can we have official clarification (update docs)?\r\n\r\nUps, sorry about _api-suggestion_ label - my bad :(","Url":"https://github.com/dotnet/winforms/issues/3250","RelatedDescription":"Open issue \"Clarification about System.Drawing.Font and Dispose\" (#3250)"},{"Id":"615206346","IsPullRequest":true,"CreatedAt":"2020-05-09T16:00:31","Actor":"hughbe","Number":"3249","RawContent":null,"Title":"Cleanup image list","State":"open","Body":"## Proposed Changes\r\n- Cleanup image list\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3249)","Url":"https://github.com/dotnet/winforms/pull/3249","RelatedDescription":"Open PR \"Cleanup image list\" (#3249)"},{"Id":"615182933","IsPullRequest":false,"CreatedAt":"2020-05-09T14:02:59","Actor":"filipnavara","Number":"3248","RawContent":null,"Title":"Unnecessary instances of ToolStripDropDownMenu","State":"open","Body":"* .NET Core Version: 3.1.200, 5.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: Haven't tried.\r\n\r\n**Problem description:**\r\n\r\nUnnecessary tooltip drop-downs are instantiated from the keyboard hook:\r\n\r\n``` \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripDropDownMenu.ToolStripDropDownMenu(System.Windows.Forms.ToolStripItem ownerItem, bool isAutoGenerated) (IL=0x00B4, Native=0x21319D68+0x1C7)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripMenuItem.CreateDefaultDropDown() (IL=0x0007, Native=0x21319D18+0x37)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripDropDownItem.DropDown.get() (IL≈0x0008, Native=0x21319C30+0x4D)\r\n>\tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripDropDownItem.OnKeyboardToolTipHook(System.Windows.Forms.ToolTip toolTip) (IL≈0x000C, Native=0x21319B98+0x3F)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripItem.System.Windows.Forms.IKeyboardToolTip.OnHooked(System.Windows.Forms.ToolTip toolTip) (IL=0x0007, Native=0x21319B58+0x2B)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.KeyboardToolTipStateMachine.Hook(System.Windows.Forms.IKeyboardToolTip tool, System.Windows.Forms.ToolTip toolTip) (IL=0x0017, Native=0x213199C0+0x48)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStrip.OnItemAddedInternal(System.Windows.Forms.ToolStripItem item) (IL=0x0019, Native=0x21319910+0x62)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripItemCollection.Add(System.Windows.Forms.ToolStripItem value) (IL=0x0036, Native=0x21318418+0x8A)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripItemCollection.AddRange(System.Windows.Forms.ToolStripItem[] toolStripItems) (IL≈0x003C, Native=0x21318280+0x101)\r\n```\r\n\r\n`ToolStripDropDownItem.OnKeyboardToolTipHook` is creating instances of `ToolStripDropDownMenu` even if there is no submenu used. It should probably first check for the existence of the drop-down menu like the other code in the class does.\r\n\r\nAdditionally, the `ToolStripDropDownMenu` objects are not properly disposed with the rest of the control tree:\r\n\r\n![image](https://user-images.githubusercontent.com/1764393/81475674-fcb26000-920d-11ea-92fe-baa46789cb3d.png)\r\n\r\nThis is a screenshot from a memory profiler after a `Form` with couple of controls was closed. Note that all the objects eventually get finalized but the `ControlNativeWindow` linked to the `ToolStripDropDownMenu` objects has `suppressedGC = false` property so it likely was not destroyed properly.\r\n\r\n**Expected behavior:**\r\n\r\nNo additional `ToolStripDropDownMenu` allocations for toolstrip menu items that have no submenus.\r\n\r\n**Minimal repro:**\r\n\r\nNo repro at the moment, will update the issue if I can come up with small sample.","Url":"https://github.com/dotnet/winforms/issues/3248","RelatedDescription":"Open issue \"Unnecessary instances of ToolStripDropDownMenu\" (#3248)"},{"Id":"615182136","IsPullRequest":false,"CreatedAt":"2020-05-09T13:58:28","Actor":"kirsan31","Number":"3247","RawContent":null,"Title":"RichTextBox Rtf property wrong converting non ascii chars on Win10 with utf8 locale","State":"open","Body":"* .NET Core Version: **3.1.3**\r\n\r\n* Have you experienced this same bug with .NET Framework?: **Yes**\r\n\r\n**Problem description and Expected behavior:**\r\n![Snipaste_2020-05-09_16-50-25](https://user-images.githubusercontent.com/17767561/81475488-3a66b700-9215-11ea-9ecc-13d06057c85a.png)\r\nNote, due to other [bug](https://github.com/dotnet/winforms/issues/3032)  in .net core (3.1.3), RichTextBox Rtf  setter always trying to convert input through utf8, and therefor lead to same wrong output.\r\n\r\n**Minimal repro:**\r\n[Same](https://github.com/dotnet/winforms/files/4420952/WinFormsCoreTest2.zip) as in https://github.com/dotnet/winforms/issues/3032","Url":"https://github.com/dotnet/winforms/issues/3247","RelatedDescription":"Open issue \"RichTextBox Rtf property wrong converting non ascii chars on Win10 with utf8 locale\" (#3247)"},{"Id":"614943970","IsPullRequest":true,"CreatedAt":"2020-05-08T19:38:03","Actor":"M-Lipin","Number":"3246","RawContent":null,"Title":"Adding Splitter UIA accessibility","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3245\r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding Splitter accessibility object;\r\n- Switching Splitter accessibility to UIA providers.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for Splitter control accessibility.\r\n- Prerequisite to fix #2164.\r\n\r\n## Regression? \r\n\r\n- YNo\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81440270-6bdd7500-9178-11ea-9712-c5df715b3a87.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81442514-67b35680-917c-11ea-923b-9e07e1a61f8e.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit testing;\r\n- UI automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect and Accessibility Insights.\r\n- Accessibility client apps.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n\r\nTest environment(s)\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3246)","Url":"https://github.com/dotnet/winforms/pull/3246","RelatedDescription":"Open PR \"Adding Splitter UIA accessibility\" (#3246)"},{"Id":"614929446","IsPullRequest":false,"CreatedAt":"2020-05-08T19:11:15","Actor":"M-Lipin","Number":"3245","RawContent":null,"Title":"Splitter control accessibility does not support UIA providers","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n![image](https://user-images.githubusercontent.com/23213980/81440270-6bdd7500-9178-11ea-9712-c5df715b3a87.png)\r\n\r\nAccessibility providers:\r\n\"[pid:8180,providerId:0x80ACA Main:Nested [pid:9640,providerId:0x80ACA Main(parent link):Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]\"\r\n\r\n\r\n**Expected behavior:**\r\nSplitter control accessibility should support UIA providers.\r\n\r\n**Minimal repro:**\r\nCreate WinForms app with Splitte control and analyze it using Inspect.\r\n\r\n**Related item:**\r\nThis work item is the sub of #2164","Url":"https://github.com/dotnet/winforms/issues/3245","RelatedDescription":"Open issue \"Splitter control accessibility does not support UIA providers\" (#3245)"},{"Id":"614913288","IsPullRequest":true,"CreatedAt":"2020-05-08T18:40:51","Actor":"M-Lipin","Number":"3244","RawContent":null,"Title":"Adding UIA provider support to RadioButtonAccessibleObject","State":"open","Body":"Moving RadioButtonAccessibleObject to separate file.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3243\r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding UIA providers support for RadioButton control accessibility.\r\n- Moving RadioButtonAccessibleObject to separate file.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for ListView control accessibility.\r\n- Prerequisite to fix #2164.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81437126-587bdb00-9173-11ea-926c-7a39ed679597.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81437717-4f3f3e00-9174-11ea-8ac0-ffec8e9ce631.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit testing;\r\n- UI automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect and Accessibility Insights.\r\n- Accessibility client apps.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3244)","Url":"https://github.com/dotnet/winforms/pull/3244","RelatedDescription":"Open PR \"Adding UIA provider support to RadioButtonAccessibleObject\" (#3244)"},{"Id":"614908884","IsPullRequest":false,"CreatedAt":"2020-05-08T18:31:27","Actor":"M-Lipin","Number":"3243","RawContent":null,"Title":"RadioButton control accessibility does not support UIA providers","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81437126-587bdb00-9173-11ea-926c-7a39ed679597.png)\r\n\r\n\r\n\"[pid:10072,providerId:0x60B5A Main:Nested [pid:25552,providerId:0x60B5A Main(parent link):Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]\"\r\n\r\n\r\n**Expected behavior:**\r\nRadioButton control accessibility should support UIA providers.\r\n\r\n**Minimal repro:**\r\nCreate WinForms app with RadioButton control and analyze it using Inspect.\r\n\r\n**Related item:**\r\nThis work item is the sub of #2164","Url":"https://github.com/dotnet/winforms/issues/3243","RelatedDescription":"Open issue \"RadioButton control accessibility does not support UIA providers\" (#3243)"},{"Id":"614860917","IsPullRequest":true,"CreatedAt":"2020-05-08T16:54:37","Actor":"hughbe","Number":"3242","RawContent":null,"Title":"Strip out IsIE support","State":"open","Body":"## Proposed Changes\r\n- Strip out IsIE support\r\n\r\n/cc @Tanya-Solyanik \r\n\r\nFixes #3178\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3242)","Url":"https://github.com/dotnet/winforms/pull/3242","RelatedDescription":"Open PR \"Strip out IsIE support\" (#3242)"},{"Id":"614699599","IsPullRequest":true,"CreatedAt":"2020-05-08T12:01:40","Actor":"dotnet-maestro[bot]","Number":"3240","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200506.5\r\n- **Date Produced**: 5/6/2020 11:36 PM\r\n- **Commit**: 8547938aefa24475a04877285553f0b2663ae249\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20228.4 to 5.0.0-beta.20256.5\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20228.4 to 5.0.0-beta.20256.5\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20228.4 to 5.0.0-beta.20256.5\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20228.4 to 5.0.0-beta.20256.5\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20228.4 to 5.0.0-beta.20256.5\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3240)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3240","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3240)"},{"Id":"614632784","IsPullRequest":false,"CreatedAt":"2020-05-08T09:43:39","Actor":"hughbe","Number":"3239","RawContent":null,"Title":"Need a way to mock RegistryKey","State":"open","Body":"* .NET Core Version: \r\nmaster\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nN/A\r\n\r\n**Problem description:**\r\nWe want to test various registry interactions such as with `InputLanguage` (https://github.com/dotnet/winforms/pull/3237)\r\n\r\n@weltkante  mentioned he's putting something together but this could take some time (https://github.com/dotnet/winforms/pull/3237#discussion_r422039848)\r\n\r\nOpening this issue to track that mocking method","Url":"https://github.com/dotnet/winforms/issues/3239","RelatedDescription":"Open issue \"Need a way to mock RegistryKey\" (#3239)"},{"Id":"614630162","IsPullRequest":false,"CreatedAt":"2020-05-08T09:38:23","Actor":"Vino-Wang","Number":"3238","RawContent":null,"Title":"The selected cell's below dot line is missing when setting the ListView’s GridLines to true","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 5.0.100-preview.5.20256.4\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nThe below selected dot line of the selected cell is missing.\r\n![GridLines_True_Core](https://user-images.githubusercontent.com/18568603/81393275-a9c7a280-9152-11ea-83ef-f0939ce22ed0.png)\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nThe dot line should not be missing.\r\nGridLines = False\r\n![GridLines_False_Core](https://user-images.githubusercontent.com/18568603/81393261-a59b8500-9152-11ea-93b7-9a60c83baf22.png)\r\n\r\n**Minimal repro:**\r\n1.\tCreate a winforms core project or run the attached project.\r\n[ListView_GridLines.zip](https://github.com/dotnet/winforms/files/4598241/ListView_GridLines.zip)\r\n2.\tDrag and drop a ListView to Form designer.\r\n3.\tClick the ‘Edit Items…’ & ‘Edit Columns…’ to add some Items & Columns.\r\n4.\tSet the View property to Details, and set the GridLines to True.\r\n5.\tBuild and run.\r\n","Url":"https://github.com/dotnet/winforms/issues/3238","RelatedDescription":"Open issue \"The selected cell's below dot line is missing when setting the ListView’s GridLines to true\" (#3238)"},{"Id":"613221170","IsPullRequest":true,"CreatedAt":"2020-05-08T03:14:29","Actor":"hughbe","Number":"3226","RawContent":null,"Title":"Cleanup and nullable annotate ProfessionalColors","State":"closed","Body":"## Proposed Changes\r\n- Cleanup and nullable annotate ProfessionalColors\r\n\r\nPretty trivial\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3226)","Url":"https://github.com/dotnet/winforms/pull/3226","RelatedDescription":"Closed or merged PR \"Cleanup and nullable annotate ProfessionalColors\" (#3226)"},{"Id":"614333524","IsPullRequest":true,"CreatedAt":"2020-05-08T02:08:09","Actor":"hughbe","Number":"3236","RawContent":null,"Title":"Nullable annotate ApplicationContext","State":"closed","Body":"## Proposed Changes\r\n- Nullable annotate ApplicationContext\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3236)","Url":"https://github.com/dotnet/winforms/pull/3236","RelatedDescription":"Closed or merged PR \"Nullable annotate ApplicationContext\" (#3236)"},{"Id":"614349114","IsPullRequest":true,"CreatedAt":"2020-05-07T21:16:39","Actor":"hughbe","Number":"3237","RawContent":null,"Title":"Nullable annotate InputLanguage","State":"open","Body":"## Proposed Changes\r\n- Nullable annotate InputLanguage\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3237)","Url":"https://github.com/dotnet/winforms/pull/3237","RelatedDescription":"Open PR \"Nullable annotate InputLanguage\" (#3237)"},{"Id":"614003589","IsPullRequest":true,"CreatedAt":"2020-05-07T12:04:43","Actor":"hughbe","Number":"3235","RawContent":null,"Title":"Nullable annotate TextRenderer and dependencies","State":"open","Body":"## Proposed Changes\r\n- Nullable annotate TextRender and dependencies\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3235)","Url":"https://github.com/dotnet/winforms/pull/3235","RelatedDescription":"Open PR \"Nullable annotate TextRenderer and dependencies\" (#3235)"},{"Id":"613707493","IsPullRequest":true,"CreatedAt":"2020-05-07T01:17:12","Actor":"lonitra","Number":"3234","RawContent":null,"Title":"Implement Subtitle Property for ListViewGroup","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2655\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add subtitle API to `ListViewGroup`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will have the ability to add subtitles to their ListViewGroups\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/30007367/81241913-8240d080-8fc0-11ea-81b2-c2c56b30f54d.png)\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/30007367/81241820-3ee66200-8fc0-11ea-8112-0c79af80c202.png)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit testing\r\n- Manual testing\r\n\r\n## Note\r\n- Correct me if I'm wrong, but for accessibility purposes I believe we'll need to expose the UIA Text Pattern\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3234)","Url":"https://github.com/dotnet/winforms/pull/3234","RelatedDescription":"Open PR \"Implement Subtitle Property for ListViewGroup\" (#3234)"},{"Id":"613619757","IsPullRequest":true,"CreatedAt":"2020-05-06T21:19:02","Actor":"M-Lipin","Number":"3233","RawContent":null,"Title":"Adding UIA accessibility support for PictureBox control","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3232 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding UIA accessibility support for PictureBox control.\r\n- Moving PictureBox accessible object implementation to a separate file.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for ListView control accessibility.\r\n- Prerequisite to fix #2164.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81228245-6b1cd580-8ff6-11ea-8de5-c1f75b62c77e.png)\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/23213980/81229228-21cd8580-8ff8-11ea-84dc-45248cea61d0.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit tests (to be implemented);\r\n- UI automation.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect;\r\n- Accessibility Insights;\r\n- Narrator and other accessibility client apps.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3233)","Url":"https://github.com/dotnet/winforms/pull/3233","RelatedDescription":"Open PR \"Adding UIA accessibility support for PictureBox control\" (#3233)"},{"Id":"613607857","IsPullRequest":false,"CreatedAt":"2020-05-06T20:56:19","Actor":"M-Lipin","Number":"3232","RawContent":null,"Title":"PictureBox control does not support UIA accessibility","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n![image](https://user-images.githubusercontent.com/23213980/81227292-dc5b8900-8ff4-11ea-8696-4fa4f0bb05f9.png)\r\n\r\nAccessibility providers:\r\n[pid:23288,providerId:0x70F0E Main:Nested [pid:23476,providerId:0x70F0E Main(parent link):Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]\"\r\n\r\n**Expected behavior:**\r\nThere should be UIA accessibility provider from WinForms.\r\n\r\n**Minimal repro:**\r\nCreate WinForms app with PictureBox control and analyze it using Inspect.\r\n\r\nRelated item:\r\nThis work item is the sub of #2164","Url":"https://github.com/dotnet/winforms/issues/3232","RelatedDescription":"Open issue \"PictureBox control does not support UIA accessibility\" (#3232)"},{"Id":"613605541","IsPullRequest":true,"CreatedAt":"2020-05-06T20:52:06","Actor":"hughbe","Number":"3231","RawContent":null,"Title":"Fix ILegacyIAccessibleProvider.GetSelection return type","State":"open","Body":"## Proposed Changes\r\nRunning the following test \r\n\r\n```cs\r\n[WinFormsFact]\r\npublic void AccesibleObject_ILegacyIAccessibleProviderGetSelection_Invoke_ReturnsExpected()\r\n{\r\n    var o = new AccessibleObject();\r\n    Test_ILegacyIAccessibleProviderGetSelection(o);\r\n}\r\n\r\n[DllImport(NativeTests, ExactSpelling = true)]\r\nprivate static extern void Test_ILegacyIAccessibleProviderGetSelection(\r\n    [MarshalAs(UnmanagedType.IUnknown)] object pUnk);\r\n```\r\n\r\n```cpp\r\n#define TEST extern \"C\" __declspec(dllexport)\r\n\r\nTEST void WINAPI Test_ILegacyIAccessibleProviderGetSelection(IUnknown* pUnknown)\r\n{\r\n    HRESULT hr;\r\n    ILegacyIAccessibleProvider* pLegacyIAccessibleProvider;\r\n\r\n    hr = pUnknown->QueryInterface(IID_ILegacyIAccessibleProvider, (void**)&pLegacyIAccessibleProvider);\r\n    assert(hr == S_OK);\r\n\r\n#if false\r\n    SAFEARRAY *result = (SAFEARRAY*)(long)0xdeadbeef;\r\n    hr = pLegacyIAccessibleProvider->GetSelection(&result);\r\n    assert(hr == S_OK);\r\n    assert(result->cbElements == 1);\r\n    assert(static_cast<IRawElementProviderSimple*>(result->pvData) == NULL);\r\n    SafeArrayDestroy(result);\r\n#endif\r\n\r\n    // Negative tests\r\n    hr = pLegacyIAccessibleProvider->GetSelection(NULL);\r\n    assert(hr == S_OK);\r\n\r\n    return S_OK;\r\n});\r\n}\r\n```\r\n\r\nI get an assertion failure in\r\n```cs\r\nhr = pLegacyIAccessibleProvider->GetSelection(&result);\r\nassert(hr == S_OK);\r\n```\r\n\r\nInstead of `S_OK`, I get `COR_E_SAFEARRAYTYPEMISMATCH` (0x80131533) returned as the HRESULT.\r\n\r\nTaking a look at the native definition, we seem to be returning `object[]` instead of an interface array. So I think we end up marshalling an array of variants (?) definitely not the interface! \r\n\r\nFrom https://github.com/tpn/winsdk-10/blob/master/Include/10.0.10240.0/um/UIAutomationCore.idl#L845\r\n```cpp\r\nHRESULT GetSelection (\r\n    [out, retval] SAFEARRAY(IRawElementProviderSimple *) * pvarSelectedChildren );\r\n```\r\n\r\nThe fix is to correct the return value.\r\n\r\n## Discussion\r\nFollowing on from https://github.com/dotnet/runtime/issues/35855, should we create our own `SAFEARRAY` type and somehow pass this in as a pointer?\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3231)","Url":"https://github.com/dotnet/winforms/pull/3231","RelatedDescription":"Open PR \"Fix ILegacyIAccessibleProvider.GetSelection return type\" (#3231)"},{"Id":"613602623","IsPullRequest":true,"CreatedAt":"2020-05-06T20:46:38","Actor":"M-Lipin","Number":"3230","RawContent":null,"Title":"Moving GroupBox accessible object to a separate file","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3229 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Moving GroupBox accessible object to a separate file.\r\n- Minor refactoring and code style changes.\r\n- No functional changes.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for GroupBox control accessibility.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/23213980/81226520-a7026b80-8ff3-11ea-9749-1514b125b424.png)\r\n\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/23213980/81226420-80443500-8ff3-11ea-935a-4d2e20eafdef.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Separated accessible object should be covered by unit test.\r\n- UI automation.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect too.\r\n- Accessibility client apps.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3230)","Url":"https://github.com/dotnet/winforms/pull/3230","RelatedDescription":"Open PR \"Moving GroupBox accessible object to a separate file\" (#3230)"},{"Id":"613594661","IsPullRequest":false,"CreatedAt":"2020-05-06T20:32:06","Actor":"M-Lipin","Number":"3229","RawContent":null,"Title":"GroupBoxAccessibleObject class definition should be in a separate file","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\nGroupBoxAccessibleObject class definition is located in the same file as a GroupBox control definition.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nGroupBoxAccessibleObject class should be in a separate file and GroupBox class should be partial.\r\n","Url":"https://github.com/dotnet/winforms/issues/3229","RelatedDescription":"Open issue \"GroupBoxAccessibleObject class definition should be in a separate file\" (#3229)"},{"Id":"613541039","IsPullRequest":true,"CreatedAt":"2020-05-06T18:58:29","Actor":"M-Lipin","Number":"3228","RawContent":null,"Title":"Adding CheckBox control UIA accessibility","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3227\r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding UIA providers support for CheckBox control.\r\n- Moving CheckBox control accessible object to a separate file.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for Button control accessibility.\r\n- Prerequisite to fix #2164\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81215671-56364700-8fe2-11ea-9183-7088f188c9f1.png)\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/23213980/81216702-0193cb80-8fe4-11ea-84fb-76666a553f6c.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Unit tests.\r\n- UI automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect tool (need to ensure that Inspect properties are similar to what we had before switching to UIA as well as accessibility actions should work properly: Default action, Toggle action and so on)\r\n- Accessibility Insights\r\n- Narrator\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3228)","Url":"https://github.com/dotnet/winforms/pull/3228","RelatedDescription":"Open PR \"Adding CheckBox control UIA accessibility\" (#3228)"},{"Id":"613532160","IsPullRequest":false,"CreatedAt":"2020-05-06T18:43:33","Actor":"M-Lipin","Number":"3227","RawContent":null,"Title":"CheckBox control does not support UIA accessibility","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n![image](https://user-images.githubusercontent.com/23213980/81215671-56364700-8fe2-11ea-9183-7088f188c9f1.png)\r\n\r\n**Accessibility providers:**\r\n[pid:15032,providerId:0x40CA8 Main:Nested [pid:12228,providerId:0x40CA8 Main(parent link):Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)];\r\nHwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]\"\r\n\r\n\r\n**Expected behavior:**\r\nThere should be UIA accessibility provider from WinForms\r\n\r\n**Minimal repro:**\r\nCreate WinForms app with CheckBox control and analyze it using Inspect.\r\n\r\n**Related item:**\r\nThis work item is the sub of #2164","Url":"https://github.com/dotnet/winforms/issues/3227","RelatedDescription":"Open issue \"CheckBox control does not support UIA accessibility\" (#3227)"},{"Id":"612966251","IsPullRequest":true,"CreatedAt":"2020-05-06T00:01:38","Actor":"JeremyKuhne","Number":"3225","RawContent":null,"Title":"Provide internals test utilities","State":"open","Body":"Add internals accessor helpers\r\n\r\nIntroduces ITestAccessor and related classes to keep test specific code out of the shipping assemblies.\r\n\r\nAllows easy dynamic access to private/internal fields and members and provides a pattern for writing typed accessors.\r\n\r\nAlso supports creating of delegates, which allows for access to members that utilize ref structs which are not yet supported in reflection.\r\n\r\nRemoves existing TestAccessor classes from the shipping code. Updates most of the internal virtual methods on TextBox to private protected to encapsulate. Various comment / line spacing fixes to TextBox.\r\n\r\nThere are three commits in this PR. The first two clean up tests and internal access for the EventHandlerService. I kept them separate as they don't depend on the new functionality as I removed all of the internals access there.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3225)","Url":"https://github.com/dotnet/winforms/pull/3225","RelatedDescription":"Open PR \"Provide internals test utilities\" (#3225)"},{"Id":"612899739","IsPullRequest":true,"CreatedAt":"2020-05-05T21:15:19","Actor":"M-Lipin","Number":"3224","RawContent":null,"Title":"Adding ListView control UIA accessibility","State":"open","Body":"Implementing UIA for ListView control.\r\nMoving ListView accessible objects to separate files.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3223 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding UIA accessibility support for ListView control.\r\n- Moving ListView accessibility to separate files.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for ListView control accessibility.\r\n- Prerequisite to fix #2164\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81116178-94256380-8f2d-11ea-8b59-c2c25d9291a2.png)\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/23213980/81116685-7c021400-8f2e-11ea-93d1-36c7fa11bdb2.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Unit tests.\r\n- Automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3224)","Url":"https://github.com/dotnet/winforms/pull/3224","RelatedDescription":"Open PR \"Adding ListView control UIA accessibility\" (#3224)"},{"Id":"612896718","IsPullRequest":false,"CreatedAt":"2020-05-05T21:09:21","Actor":"M-Lipin","Number":"3223","RawContent":null,"Title":"ListView control does not support UIA accessibility","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\n\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Providers:**\r\n[pid:28344,providerId:0x31378 Main:Nested [pid:26684,providerId:0x31378 Main(parent link):Microsoft: ListView Proxy (unmanaged:UIAutomationCore.dll)];\r\nNonclient:Microsoft: Non-Client Proxy (unmanaged:uiautomationcore.dll);\r\nHwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]\"\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81116178-94256380-8f2d-11ea-8b59-c2c25d9291a2.png)\r\n\r\n\r\n**Expected behavior:**\r\nThere should be UIA accessibility provider from WinForms\r\n\r\n**Minimal repro:**\r\nCreate WinForms app with ListView control and analyze it using Inspect.\r\n\r\n**Related item:**\r\nThis work item is the sub of #2164","Url":"https://github.com/dotnet/winforms/issues/3223","RelatedDescription":"Open issue \"ListView control does not support UIA accessibility\" (#3223)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-05-11T05:30:52.4282325Z","RunDurationInMilliseconds":645}