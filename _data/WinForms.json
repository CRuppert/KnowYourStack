{"Data":{"GitHub":{"Issues":[{"Id":"616273535","IsPullRequest":false,"CreatedAt":"2020-05-12T00:31:03","Actor":"lonitra","Number":"3261","RawContent":null,"Title":"Accessibility: ListViewGroup Subtitle Property","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nThe ListViewGroup has a subtitle property that is not being picked up by both inspect and narrator.\r\n\r\n**Expected behavior:**\r\n\r\nThe subtitle property should be read by narrator and it should also be displayed somewhere in inspect\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a winforms core app\r\n2. Add a ListView and ListViewGroup with a subtitle\r\n4. Run app\r\n3. Start inspect/narrator and click on the ListViewGroup with the subtitle in the app\r\n","Url":"https://github.com/dotnet/winforms/issues/3261","RelatedDescription":"Open issue \"Accessibility: ListViewGroup Subtitle Property\" (#3261)"},{"Id":"616260746","IsPullRequest":false,"CreatedAt":"2020-05-11T23:52:31","Actor":"filipnavara","Number":"3260","RawContent":null,"Title":"Changing MainForm doesn't update reference in ThreadContext","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1.200\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: Haven't tried\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n\r\nWe have an application that can have more than one form open. When one of these forms is closed and it was the `ApplicationContext.MainForm` one we switch it to another opened window. Once all the windows are closed we shut down the app.\r\n\r\nCurrently the `Application.ThreadContext` class holds an additional reference to the main form that is assigned only at the beginning of the message loop. It doesn't reflect any changes to `ApplicationContext.MainForm` which is documented to be allowed:\r\n\r\n```c#\r\n        /// <summary>\r\n        ///  Determines the mainForm for this context. This may be changed\r\n        ///  at anytime.\r\n        ///  If OnMainFormClosed is not overriden, the thread's message\r\n        ///  loop will be terminated when mainForm is closed.\r\n        /// </summary>\r\n```\r\n\r\nChanging MainForm doesn't update reference in ThreadContext and hence the memory for the old form is never released. Similarly, any properties that are checked in the ThreadContext class are checked on a wrong form.\r\n\r\n**Expected behavior:**\r\n\r\nThreadContext should not hold its own reference to MainForm. If it needs it then it should be updated accordingly, either periodically in the loop, or through some mechanism from inside `Application.MainForm` setter.\r\n\r\n**Minimal repro:**\r\n\r\n[MainFormLeak.cs.zip](https://github.com/dotnet/winforms/files/4612656/MainFormLeak.cs.zip)\r\n\r\n![image](https://user-images.githubusercontent.com/1764393/81623212-398b7c00-93f3-11ea-9a35-6e83b0c6fc2a.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/3260","RelatedDescription":"Open issue \"Changing MainForm doesn't update reference in ThreadContext\" (#3260)"},{"Id":"616166400","IsPullRequest":true,"CreatedAt":"2020-05-11T20:31:58","Actor":"hughbe","Number":"3259","RawContent":null,"Title":"Cleanup and enhance DataGridViewCell testing","State":"open","Body":"## Proposed Changes\r\n- Cleanup and enhance DataGridViewCell testing\r\n\r\nBasically I started by removing instances of creating `DataGridView` in test data, but ended up doing way more :)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3259)","Url":"https://github.com/dotnet/winforms/pull/3259","RelatedDescription":"Open PR \"Cleanup and enhance DataGridViewCell testing\" (#3259)"},{"Id":"616131597","IsPullRequest":true,"CreatedAt":"2020-05-11T19:37:07","Actor":"M-Lipin","Number":"3258","RawContent":null,"Title":"Fixing DataGridViewComboBoxCell: ComboBox causes application crash on handle recreating related to accessibility hierarchy tree restructuring","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3251\r\n\r\n\r\n## Proposed changes\r\n\r\n- Porting .NET Framework fix for DataGridViewComboBox cell issue related to the control handle recreating when restructuring accessibility hierarchy tree.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Costumers will not experience application error when working with the DataGridView containing ComboBox cell. \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nApplication error (crash) when working with DataGridView with ComboBox cell (reproduces rarely).\r\n\r\n### After\r\n\r\nNo issues.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Unit testing.\r\n- Automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-preview.5.20260.4\r\n Commit:    0950d416f9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.5.20260.4\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.5.20260.5\r\n  Commit:  09ee4814cb\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3258)","Url":"https://github.com/dotnet/winforms/pull/3258","RelatedDescription":"Open PR \"Fixing DataGridViewComboBoxCell: ComboBox causes application crash on handle recreating related to accessibility hierarchy tree restructuring\" (#3258)"},{"Id":"616105264","IsPullRequest":false,"CreatedAt":"2020-05-11T18:53:13","Actor":"terrajobst","Number":"3257","RawContent":null,"Title":"Survey: repo contribution experience","State":"open","Body":"We’ve been working as a team, and community, for five years in the dotnet org on the .NET Core project. Many of the same GitHub handles have remained constant over that time, some are new, and others have come and gone. Thanks to everyone that has contributed! We normally focus on how to improve the product, but we’re turning our focus to improving the open source project. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/ZLPVNX9?SourceRepo=dotnet%2Fwinforms)\r\n\r\nThank you for your time!\r\n\r\n### Discussion\r\n\r\nFor discussion, please go to https://github.com/dotnet/runtime/issues/36235.","Url":"https://github.com/dotnet/winforms/issues/3257","RelatedDescription":"Open issue \"Survey: repo contribution experience\" (#3257)"},{"Id":"615837417","IsPullRequest":true,"CreatedAt":"2020-05-11T13:34:09","Actor":"dotnet-maestro[bot]","Number":"3256","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200510.5\r\n- **Date Produced**: 5/10/2020 9:42 PM\r\n- **Commit**: 09ee4814cb669e4b703a458c63483fa75a47c58f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3256)","Url":"https://github.com/dotnet/winforms/pull/3256","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3256)"},{"Id":"614699599","IsPullRequest":true,"CreatedAt":"2020-05-11T13:25:16","Actor":"dotnet-maestro[bot]","Number":"3240","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200506.5\r\n- **Date Produced**: 5/6/2020 11:36 PM\r\n- **Commit**: 8547938aefa24475a04877285553f0b2663ae249\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20228.4 to 5.0.0-beta.20256.5\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20228.4 to 5.0.0-beta.20256.5\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20228.4 to 5.0.0-beta.20256.5\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20228.4 to 5.0.0-beta.20256.5\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20228.4 to 5.0.0-beta.20256.5\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3240)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3240","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3240)"},{"Id":"615823073","IsPullRequest":true,"CreatedAt":"2020-05-11T13:07:06","Actor":"RussKie","Number":"3255","RawContent":null,"Title":"Disable deadlocking test","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3255)","Url":"https://github.com/dotnet/winforms/pull/3255","RelatedDescription":"Closed or merged PR \"Disable deadlocking test\" (#3255)"},{"Id":"615816695","IsPullRequest":false,"CreatedAt":"2020-05-11T11:37:34","Actor":"RussKie","Number":"3254","RawContent":null,"Title":"Flaky test: `ProfessionalColorTable_ChangeUserPreferences_GetColor_ReturnsExpected` deadlock","State":"open","Body":"\r\n**Problem description:**\r\n\r\nAfter #3226 was merged, `ProfessionalColorTable_ChangeUserPreferences_GetColor_ReturnsExpected` tests started deadlocking in x86 mode that caused CI builds to fail again.\r\nI managed to reproduce the deadlock locally, though it took few attempts to do so.\r\n\r\nLooks like the test deadlocks on itself, there are no other user-code executed:\r\n![image](https://user-images.githubusercontent.com/4403806/81555995-eacaeb80-93cc-11ea-9af3-78e5f32ee5e5.png)\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/81555946-ccfd8680-93cc-11ea-880a-7ef98bf4bc56.png)\r\n\r\n\r\n**Expected behavior:**\r\n\r\nThe tests work as expected.\r\n\r\n**Minimal repro:**\r\n\r\nA repro is bit convoluted. Unfortunately `build.cmd -test -platform x86` command doesn't appear to work unless `Winforms.sln` is configured for x86 platform (which breaks other modes). ","Url":"https://github.com/dotnet/winforms/issues/3254","RelatedDescription":"Open issue \"Flaky test: `ProfessionalColorTable_ChangeUserPreferences_GetColor_ReturnsExpected` deadlock\" (#3254)"},{"Id":"615767335","IsPullRequest":true,"CreatedAt":"2020-05-11T10:18:13","Actor":"hughbe","Number":"3253","RawContent":null,"Title":"Add FxCopAnalyzers","State":"open","Body":"## Proposed Changes\r\n- Add FxCopAnalyzers\r\n\r\nBaselined all the failures. Can go thru and re-enable them as we see fit\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3253)","Url":"https://github.com/dotnet/winforms/pull/3253","RelatedDescription":"Open PR \"Add FxCopAnalyzers\" (#3253)"},{"Id":"614707427","IsPullRequest":true,"CreatedAt":"2020-05-11T03:21:28","Actor":"dotnet-maestro[bot]","Number":"3241","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200509.5\r\n- **Date Produced**: 5/9/2020 10:31 PM\r\n- **Commit**: e18250bd8f23f85f670599177118d6b957f9a3dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20253.7 to 5.0.0-preview.5.20259.5\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3241)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/3241","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3241)"},{"Id":"615478256","IsPullRequest":false,"CreatedAt":"2020-05-10T21:16:46","Actor":"hughbe","Number":"3252","RawContent":null,"Title":"AppActivate_ProcessId fails locally","State":"open","Body":"```\r\nA total of 1 test files matched the specified pattern.\r\n[xUnit.net 00:00:02.87]     Microsoft.VisualBasic.IntegrationTests.InteractionTests.AppActivate_ProcessId [FAIL]\r\n  X Microsoft.VisualBasic.IntegrationTests.InteractionTests.AppActivate_ProcessId [584ms]\r\n  Error Message:\r\n   System.FormatException : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\n  Stack Trace:\r\n     at System.Text.ValueStringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.String.Format(IFormatProvider provider, String format, Object[] args)\r\n   at Microsoft.VisualBasic._Interaction.AppActivateHelper(IntPtr hwndApp) in C:\\Users\\hughbe\\Documents\\GitHub\\winforms\\src\\Microsoft.VisualBasic.Forms\\src\\Microsoft\\VisualBasic\\Interaction.vb:line 204\r\n   at Microsoft.VisualBasic._Interaction.AppActivateByProcessId(Int32 ProcessId) in C:\\Users\\hughbe\\Documents\\GitHub\\winforms\\src\\Microsoft.VisualBasic.Forms\\src\\Microsoft\\VisualBasic\\Interaction.vb:line 137\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.VisualBasic.Interaction.InvokeMethod(String methodName, Object[] args)\r\n   at Microsoft.VisualBasic.Interaction.AppActivate(Int32 ProcessId)\r\n   at Microsoft.VisualBasic.IntegrationTests.InteractionTests.AppActivate_ProcessId() in C:\\Users\\hughbe\\Documents\\GitHub\\winforms\\src\\Microsoft.VisualBasic\\tests\\IntegrationTests\\Microsoft.VisualBasic.IntegrationTests\\InteractionTests.cs:line 21\r\n```\r\n\r\nI suspect this might be causing tests to hang, because I ran some tests locally and I got a visual basic popup saying \"Message\" that didn't go away once the tests finished","Url":"https://github.com/dotnet/winforms/issues/3252","RelatedDescription":"Open issue \"AppActivate_ProcessId fails locally\" (#3252)"},{"Id":"615464902","IsPullRequest":false,"CreatedAt":"2020-05-10T19:59:01","Actor":"M-Lipin","Number":"3251","RawContent":null,"Title":"DataGridViewCell ComboBox causes application crash in some circumstances","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nSometimes DataGridViewComboBox cell causes application crash when changing ComboBox selected values.\r\n\r\n**Expected behavior:**\r\nNo crash.\r\n\r\n**Minimal repro:**\r\n- Create WinForms app with the DataGridView control and ComboBox cell and other cells with different control types.\r\n- Run app and change ComboBox cell selected value.\r\n\r\n**DevDiv issue:**\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1071695","Url":"https://github.com/dotnet/winforms/issues/3251","RelatedDescription":"Open issue \"DataGridViewCell ComboBox causes application crash in some circumstances\" (#3251)"},{"Id":"615206346","IsPullRequest":true,"CreatedAt":"2020-05-09T16:00:31","Actor":"hughbe","Number":"3249","RawContent":null,"Title":"Cleanup image list","State":"open","Body":"## Proposed Changes\r\n- Cleanup image list\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3249)","Url":"https://github.com/dotnet/winforms/pull/3249","RelatedDescription":"Open PR \"Cleanup image list\" (#3249)"},{"Id":"615182933","IsPullRequest":false,"CreatedAt":"2020-05-09T14:02:59","Actor":"filipnavara","Number":"3248","RawContent":null,"Title":"Unnecessary instances of ToolStripDropDownMenu","State":"open","Body":"* .NET Core Version: 3.1.200, 5.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: Haven't tried.\r\n\r\n**Problem description:**\r\n\r\nUnnecessary tooltip drop-downs are instantiated from the keyboard hook:\r\n\r\n``` \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripDropDownMenu.ToolStripDropDownMenu(System.Windows.Forms.ToolStripItem ownerItem, bool isAutoGenerated) (IL=0x00B4, Native=0x21319D68+0x1C7)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripMenuItem.CreateDefaultDropDown() (IL=0x0007, Native=0x21319D18+0x37)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripDropDownItem.DropDown.get() (IL≈0x0008, Native=0x21319C30+0x4D)\r\n>\tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripDropDownItem.OnKeyboardToolTipHook(System.Windows.Forms.ToolTip toolTip) (IL≈0x000C, Native=0x21319B98+0x3F)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripItem.System.Windows.Forms.IKeyboardToolTip.OnHooked(System.Windows.Forms.ToolTip toolTip) (IL=0x0007, Native=0x21319B58+0x2B)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.KeyboardToolTipStateMachine.Hook(System.Windows.Forms.IKeyboardToolTip tool, System.Windows.Forms.ToolTip toolTip) (IL=0x0017, Native=0x213199C0+0x48)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStrip.OnItemAddedInternal(System.Windows.Forms.ToolStripItem item) (IL=0x0019, Native=0x21319910+0x62)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripItemCollection.Add(System.Windows.Forms.ToolStripItem value) (IL=0x0036, Native=0x21318418+0x8A)\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ToolStripItemCollection.AddRange(System.Windows.Forms.ToolStripItem[] toolStripItems) (IL≈0x003C, Native=0x21318280+0x101)\r\n```\r\n\r\n`ToolStripDropDownItem.OnKeyboardToolTipHook` is creating instances of `ToolStripDropDownMenu` even if there is no submenu used. It should probably first check for the existence of the drop-down menu like the other code in the class does.\r\n\r\nAdditionally, the `ToolStripDropDownMenu` objects are not properly disposed with the rest of the control tree:\r\n\r\n![image](https://user-images.githubusercontent.com/1764393/81475674-fcb26000-920d-11ea-92fe-baa46789cb3d.png)\r\n\r\nThis is a screenshot from a memory profiler after a `Form` with couple of controls was closed. Note that all the objects eventually get finalized but the `ControlNativeWindow` linked to the `ToolStripDropDownMenu` objects has `suppressedGC = false` property so it likely was not destroyed properly.\r\n\r\n**Expected behavior:**\r\n\r\nNo additional `ToolStripDropDownMenu` allocations for toolstrip menu items that have no submenus.\r\n\r\n**Minimal repro:**\r\n\r\nNo repro at the moment, will update the issue if I can come up with small sample.","Url":"https://github.com/dotnet/winforms/issues/3248","RelatedDescription":"Open issue \"Unnecessary instances of ToolStripDropDownMenu\" (#3248)"},{"Id":"615182136","IsPullRequest":false,"CreatedAt":"2020-05-09T13:58:28","Actor":"kirsan31","Number":"3247","RawContent":null,"Title":"RichTextBox Rtf property wrong converting non ascii chars on Win10 with utf8 locale","State":"open","Body":"* .NET Core Version: **3.1.3**\r\n\r\n* Have you experienced this same bug with .NET Framework?: **Yes**\r\n\r\n**Problem description and Expected behavior:**\r\n![Snipaste_2020-05-09_16-50-25](https://user-images.githubusercontent.com/17767561/81475488-3a66b700-9215-11ea-9ecc-13d06057c85a.png)\r\nNote, due to other [bug](https://github.com/dotnet/winforms/issues/3032)  in .net core (3.1.3), RichTextBox Rtf  setter always trying to convert input through utf8, and therefor lead to same wrong output.\r\n\r\n**Minimal repro:**\r\n[Same](https://github.com/dotnet/winforms/files/4420952/WinFormsCoreTest2.zip) as in https://github.com/dotnet/winforms/issues/3032","Url":"https://github.com/dotnet/winforms/issues/3247","RelatedDescription":"Open issue \"RichTextBox Rtf property wrong converting non ascii chars on Win10 with utf8 locale\" (#3247)"},{"Id":"614943970","IsPullRequest":true,"CreatedAt":"2020-05-08T19:38:03","Actor":"M-Lipin","Number":"3246","RawContent":null,"Title":"Adding Splitter UIA accessibility","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3245\r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding Splitter accessibility object;\r\n- Switching Splitter accessibility to UIA providers.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for Splitter control accessibility.\r\n- Prerequisite to fix #2164.\r\n\r\n## Regression? \r\n\r\n- YNo\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81440270-6bdd7500-9178-11ea-9712-c5df715b3a87.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81442514-67b35680-917c-11ea-923b-9e07e1a61f8e.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit testing;\r\n- UI automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect and Accessibility Insights.\r\n- Accessibility client apps.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n\r\nTest environment(s)\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3246)","Url":"https://github.com/dotnet/winforms/pull/3246","RelatedDescription":"Open PR \"Adding Splitter UIA accessibility\" (#3246)"},{"Id":"614929446","IsPullRequest":false,"CreatedAt":"2020-05-08T19:11:15","Actor":"M-Lipin","Number":"3245","RawContent":null,"Title":"Splitter control accessibility does not support UIA providers","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n![image](https://user-images.githubusercontent.com/23213980/81440270-6bdd7500-9178-11ea-9712-c5df715b3a87.png)\r\n\r\nAccessibility providers:\r\n\"[pid:8180,providerId:0x80ACA Main:Nested [pid:9640,providerId:0x80ACA Main(parent link):Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]\"\r\n\r\n\r\n**Expected behavior:**\r\nSplitter control accessibility should support UIA providers.\r\n\r\n**Minimal repro:**\r\nCreate WinForms app with Splitte control and analyze it using Inspect.\r\n\r\n**Related item:**\r\nThis work item is the sub of #2164","Url":"https://github.com/dotnet/winforms/issues/3245","RelatedDescription":"Open issue \"Splitter control accessibility does not support UIA providers\" (#3245)"},{"Id":"614913288","IsPullRequest":true,"CreatedAt":"2020-05-08T18:40:51","Actor":"M-Lipin","Number":"3244","RawContent":null,"Title":"Adding UIA provider support to RadioButtonAccessibleObject","State":"open","Body":"Moving RadioButtonAccessibleObject to separate file.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3243\r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding UIA providers support for RadioButton control accessibility.\r\n- Moving RadioButtonAccessibleObject to separate file.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for ListView control accessibility.\r\n- Prerequisite to fix #2164.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81437126-587bdb00-9173-11ea-926c-7a39ed679597.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81437717-4f3f3e00-9174-11ea-8ac0-ffec8e9ce631.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit testing;\r\n- UI automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect and Accessibility Insights.\r\n- Accessibility client apps.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3244)","Url":"https://github.com/dotnet/winforms/pull/3244","RelatedDescription":"Open PR \"Adding UIA provider support to RadioButtonAccessibleObject\" (#3244)"},{"Id":"614908884","IsPullRequest":false,"CreatedAt":"2020-05-08T18:31:27","Actor":"M-Lipin","Number":"3243","RawContent":null,"Title":"RadioButton control accessibility does not support UIA providers","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81437126-587bdb00-9173-11ea-926c-7a39ed679597.png)\r\n\r\n\r\n\"[pid:10072,providerId:0x60B5A Main:Nested [pid:25552,providerId:0x60B5A Main(parent link):Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]\"\r\n\r\n\r\n**Expected behavior:**\r\nRadioButton control accessibility should support UIA providers.\r\n\r\n**Minimal repro:**\r\nCreate WinForms app with RadioButton control and analyze it using Inspect.\r\n\r\n**Related item:**\r\nThis work item is the sub of #2164","Url":"https://github.com/dotnet/winforms/issues/3243","RelatedDescription":"Open issue \"RadioButton control accessibility does not support UIA providers\" (#3243)"},{"Id":"614860917","IsPullRequest":true,"CreatedAt":"2020-05-08T16:54:37","Actor":"hughbe","Number":"3242","RawContent":null,"Title":"Strip out IsIE support","State":"open","Body":"## Proposed Changes\r\n- Strip out IsIE support\r\n\r\n/cc @Tanya-Solyanik \r\n\r\nFixes #3178\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3242)","Url":"https://github.com/dotnet/winforms/pull/3242","RelatedDescription":"Open PR \"Strip out IsIE support\" (#3242)"},{"Id":"614632784","IsPullRequest":false,"CreatedAt":"2020-05-08T09:43:39","Actor":"hughbe","Number":"3239","RawContent":null,"Title":"Need a way to mock RegistryKey","State":"open","Body":"* .NET Core Version: \r\nmaster\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nN/A\r\n\r\n**Problem description:**\r\nWe want to test various registry interactions such as with `InputLanguage` (https://github.com/dotnet/winforms/pull/3237)\r\n\r\n@weltkante  mentioned he's putting something together but this could take some time (https://github.com/dotnet/winforms/pull/3237#discussion_r422039848)\r\n\r\nOpening this issue to track that mocking method","Url":"https://github.com/dotnet/winforms/issues/3239","RelatedDescription":"Open issue \"Need a way to mock RegistryKey\" (#3239)"},{"Id":"614630162","IsPullRequest":false,"CreatedAt":"2020-05-08T09:38:23","Actor":"Vino-Wang","Number":"3238","RawContent":null,"Title":"The selected cell's below dot line is missing when setting the ListView’s GridLines to true","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 5.0.100-preview.5.20256.4\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nThe below selected dot line of the selected cell is missing.\r\n![GridLines_True_Core](https://user-images.githubusercontent.com/18568603/81393275-a9c7a280-9152-11ea-83ef-f0939ce22ed0.png)\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nThe dot line should not be missing.\r\nGridLines = False\r\n![GridLines_False_Core](https://user-images.githubusercontent.com/18568603/81393261-a59b8500-9152-11ea-93b7-9a60c83baf22.png)\r\n\r\n**Minimal repro:**\r\n1.\tCreate a winforms core project or run the attached project.\r\n[ListView_GridLines.zip](https://github.com/dotnet/winforms/files/4598241/ListView_GridLines.zip)\r\n2.\tDrag and drop a ListView to Form designer.\r\n3.\tClick the ‘Edit Items…’ & ‘Edit Columns…’ to add some Items & Columns.\r\n4.\tSet the View property to Details, and set the GridLines to True.\r\n5.\tBuild and run.\r\n","Url":"https://github.com/dotnet/winforms/issues/3238","RelatedDescription":"Open issue \"The selected cell's below dot line is missing when setting the ListView’s GridLines to true\" (#3238)"},{"Id":"614333524","IsPullRequest":true,"CreatedAt":"2020-05-08T02:08:09","Actor":"hughbe","Number":"3236","RawContent":null,"Title":"Nullable annotate ApplicationContext","State":"closed","Body":"## Proposed Changes\r\n- Nullable annotate ApplicationContext\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3236)","Url":"https://github.com/dotnet/winforms/pull/3236","RelatedDescription":"Closed or merged PR \"Nullable annotate ApplicationContext\" (#3236)"},{"Id":"614349114","IsPullRequest":true,"CreatedAt":"2020-05-07T21:16:39","Actor":"hughbe","Number":"3237","RawContent":null,"Title":"Nullable annotate InputLanguage","State":"open","Body":"## Proposed Changes\r\n- Nullable annotate InputLanguage\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3237)","Url":"https://github.com/dotnet/winforms/pull/3237","RelatedDescription":"Open PR \"Nullable annotate InputLanguage\" (#3237)"},{"Id":"614003589","IsPullRequest":true,"CreatedAt":"2020-05-07T12:04:43","Actor":"hughbe","Number":"3235","RawContent":null,"Title":"Nullable annotate TextRenderer and dependencies","State":"open","Body":"## Proposed Changes\r\n- Nullable annotate TextRender and dependencies\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3235)","Url":"https://github.com/dotnet/winforms/pull/3235","RelatedDescription":"Open PR \"Nullable annotate TextRenderer and dependencies\" (#3235)"},{"Id":"613707493","IsPullRequest":true,"CreatedAt":"2020-05-07T01:17:12","Actor":"lonitra","Number":"3234","RawContent":null,"Title":"Implement Subtitle Property for ListViewGroup","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2655\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add subtitle API to `ListViewGroup`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will have the ability to add subtitles to their ListViewGroups\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/30007367/81241913-8240d080-8fc0-11ea-81b2-c2c56b30f54d.png)\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/30007367/81241820-3ee66200-8fc0-11ea-8112-0c79af80c202.png)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit testing\r\n- Manual testing\r\n\r\n## Note\r\n- Correct me if I'm wrong, but for accessibility purposes I believe we'll need to expose the UIA Text Pattern\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3234)","Url":"https://github.com/dotnet/winforms/pull/3234","RelatedDescription":"Open PR \"Implement Subtitle Property for ListViewGroup\" (#3234)"},{"Id":"613619757","IsPullRequest":true,"CreatedAt":"2020-05-06T21:19:02","Actor":"M-Lipin","Number":"3233","RawContent":null,"Title":"Adding UIA accessibility support for PictureBox control","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3232 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding UIA accessibility support for PictureBox control.\r\n- Moving PictureBox accessible object implementation to a separate file.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for ListView control accessibility.\r\n- Prerequisite to fix #2164.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/81228245-6b1cd580-8ff6-11ea-8de5-c1f75b62c77e.png)\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/23213980/81229228-21cd8580-8ff8-11ea-84dc-45248cea61d0.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit tests (to be implemented);\r\n- UI automation.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect;\r\n- Accessibility Insights;\r\n- Narrator and other accessibility client apps.\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3233)","Url":"https://github.com/dotnet/winforms/pull/3233","RelatedDescription":"Open PR \"Adding UIA accessibility support for PictureBox control\" (#3233)"},{"Id":"613607857","IsPullRequest":false,"CreatedAt":"2020-05-06T20:56:19","Actor":"M-Lipin","Number":"3232","RawContent":null,"Title":"PictureBox control does not support UIA accessibility","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n![image](https://user-images.githubusercontent.com/23213980/81227292-dc5b8900-8ff4-11ea-8696-4fa4f0bb05f9.png)\r\n\r\nAccessibility providers:\r\n[pid:23288,providerId:0x70F0E Main:Nested [pid:23476,providerId:0x70F0E Main(parent link):Microsoft: MSAA Proxy (unmanaged:UIAutomationCore.dll)]; Hwnd(parent link):Microsoft: HWND Proxy (unmanaged:uiautomationcore.dll)]\"\r\n\r\n**Expected behavior:**\r\nThere should be UIA accessibility provider from WinForms.\r\n\r\n**Minimal repro:**\r\nCreate WinForms app with PictureBox control and analyze it using Inspect.\r\n\r\nRelated item:\r\nThis work item is the sub of #2164","Url":"https://github.com/dotnet/winforms/issues/3232","RelatedDescription":"Open issue \"PictureBox control does not support UIA accessibility\" (#3232)"},{"Id":"616279637","IsPullRequest":false,"CreatedAt":"2020-04-27T20:15:46","Actor":"ben-page","Number":"3262","RawContent":null,"Title":"Support Legacy Windows Forms Designer with SDK-Style projects","State":"open","Body":"**Visual Studio Version**:\r\n16.5.4\r\n**Summary**:\r\nI have a large enterprise application based on Windows Forms. It's made up of four assemblies.\r\n\r\n1. DataAndBusinessLogic\r\n2. WinFormsSupport - references DataAndBusinessLogic\r\n3. ApplicationDataAndBusinessLogic - references DataAndBusinessLogic\r\n4. ApplicationUI - references DataBusinessLogic,WinFormsSupport, & ApplicationDataAndBusinessLogic \r\n\r\nWe'd like to add a fifth: a .NET Core Blazor project:\r\n5. ApplicationWebUi - references ApplicationDataAndBusinessLogic & DataAndBusinessLogic\r\n\r\nWe want to maintain the WinForms UI while developing the Blazor UI. And we want them to share the same Data and BI libraries.\r\n\r\nWe made this work (or build at least). But we can't get the Windows Forms Designer to work at all.\r\n\r\n**Steps to Reproduce**:\r\nI converted the supporting libraries (1 & 3) to SDK-Style projects and had compile both .NET Framework and .NET Core assemblies.\r\n```\r\n<TargetFrameworks>net48;netcoreapp3.1</TargetFrameworks>\r\n```\r\nIn the ApplicationUI project, the Windows Forms designer works for simply forms. But if that form references anything from the other assemblies, the Designer will load.\r\n\r\nI also tried converting the other projects to SDK-Style projects, but still targeting only the .NET Framework. I was also able to get this to compile, but it's now trying to use the .NET Core Windows Forms Designer, which obviously wont work. ","Url":"https://github.com/dotnet/winforms/issues/3262","RelatedDescription":"Open issue \"Support Legacy Windows Forms Designer with SDK-Style projects\" (#3262)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-05-12T05:30:52.0265625Z","RunDurationInMilliseconds":634}