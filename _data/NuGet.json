{"Data":{"Blog":{"FeedItems":[{"Title":"NuGet.org will continue to support TLS 1.0 and 1.1 until further notice","PublishedOn":"2020-04-22T23:53:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In that post, we announced that NuGet.org would...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-continue-to-support-tls-1-0-and-1-1-until-further-notice/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12318169670","Type":"IssuesEvent","CreatedAt":"2020-05-13T00:13:15","Actor":"donnie-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7992","RelatedDescription":"Opened issue \"Allow control of Sorting when searching from PMUI\" (#7992) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nNuGet Client request to allow sorting on the Browse tab will require Server changes as well.\r\n\r\n### Describe the solution you'd like\r\nWhat changes would be necessary on Server to handle such a feature? Perhaps it should be limited to a single source?\r\n\r\n### Additional context\r\nhttps://github.com/nuget/home/issues/2585"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12319414365","Type":"IssuesEvent","CreatedAt":"2020-05-13T04:06:18","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9546","RelatedDescription":"Closed issue \"Warnings for new code in xplat verification branch from CodeAnalysis.FxCopAnalyzer\" (#9546) at NuGet/Home","RelatedBody":"The following warnings are reported by  CodeAnalysis.FxCopAnalyzer in the new code: \r\n\r\n```\r\nSigning\\Cms\\ManagedCmsWrapper.cs(50,43): error CA2000: Call System.IDisposable.Dispose on object created by 'new X509Certificate2(cert)' before all references to it are out of scope. [C:\\repos\\NuGet.Client\\src\\NuGet.Core\\NuGet.Packaging\r\n\\NuGet.Packaging.csproj]\r\n```\r\n```\r\nSigning\\Timestamp\\Rfc3161TimestampProvider.cs(29,42): error CA1823: Unused field 'RequestTimeout'. [C:\\repos\\NuGet.Client\\src\\NuGet.Core\\NuGet.Packaging\\NuGet.Packaging.csproj]\r\n```\r\n\r\nWe need to fix them before merging into dev."},{"Id":"12318027775","Type":"IssuesEvent","CreatedAt":"2020-05-12T23:47:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9558","RelatedDescription":"Opened issue \"Update the editor config, do not separate usings directives\" (#9558) at NuGet/Home","RelatedBody":"`dotnet_separate_import_directive_groups = false` leads to\r\n\r\n```\r\nusing System.Collections.Generic;\r\nusing System.Collections.Immutable;\r\nusing System.Collections.ObjectModel;\r\nusing System.IO;\r\nusing System.Linq;\r\nusing FluentAssertions;\r\nusing NuGet.Commands;\r\nusing NuGet.Commands.Test;\r\nusing NuGet.Common;\r\nusing NuGet.ProjectModel;\r\nusing NuGet.Test.Utility;\r\nusing Xunit;\r\n```\r\n\r\n`dotnet_separate_import_directive_groups = true` leads to\r\n\r\n```\r\nusing System.Collections.Generic;\r\nusing System.Collections.Immutable;\r\nusing System.Collections.ObjectModel;\r\nusing System.IO;\r\nusing System.Linq;\r\n\r\nusing FluentAssertions;\r\n\r\nusing NuGet.Commands;\r\nusing NuGet.Commands.Test;\r\nusing NuGet.Common;\r\nusing NuGet.ProjectModel;\r\nusing NuGet.Test.Utility;\r\n\r\nusing Xunit;\r\n```"},{"Id":"12317994386","Type":"IssuesEvent","CreatedAt":"2020-05-12T23:41:04","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9557","RelatedDescription":"Opened issue \"PMUI Package sorting and default ordering improvements\" (#9557) at NuGet/Home","RelatedBody":""},{"Id":"12317983895","Type":"IssuesEvent","CreatedAt":"2020-05-12T23:39:07","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9556","RelatedDescription":"Opened issue \"Search relevancy (default sort) in Browse Tab is unclear\" (#9556) at NuGet/Home","RelatedBody":"Feedback around relevancy on the Browse Tab is referenced below:\r\n\r\n> Search for \"mock\", none of the established mocking libraries show at the top (moq, rhino mocks, etc.)\r\n\r\n_Originally posted by @dfev77 in https://github.com/NuGet/Home/issues/1739#issuecomment-236285017_\r\n\r\n> looked at this...\"mocking\" finds moq nicely. just not \"mock\"\r\n\r\n_Originally posted by @rrelyea in https://github.com/NuGet/Home/issues/1739#issuecomment-236309907_\r\n\r\n> Hi, is there a way to know how the search works? For example if can find my package with name ModuleFramework.Client with just search for Module while ModuleFramework.Server i have to search for  ModuleFramework.S.\r\n\r\n_Originally posted by @ArtourK in https://github.com/NuGet/Home/issues/1739#issuecomment-261556817_\r\n\r\nIs sorting still not supported?  I would like to sort descending by number of downloads.\r\n\r\n_Originally posted by @ftpguy in https://github.com/NuGet/Home/issues/1739#issuecomment-390867599_\r\n\r\nNot having sort forces me to usually run to Github, perform my search, sort by most forked, most recently updated, most stars... then pick what I am most interested in and return to VS to install through Nuget.\r\n\r\nWhile I understand the desire to improve visibility to new packages, for enterprise solutions I would prefer to hide packages that aren't being maintained, or have very low counts.\r\n\r\n_Originally posted by @ajhalls in https://github.com/NuGet/Home/issues/1739#issuecomment-456609265_\r\n\r\n> It's a pity that this option is missing. For those who really want to get results sorted by some package parameter(title, downloads, etc.) a basic query flow could be:\r\n> 1. Access [https://www.nuget.org/packages](https://www.nuget.org/packages) and use your search term to get the total number of packages matching your criteria(you can use it in step 2, when querying for packages using the API).\r\n> 2. Get the JSON results from [https://api-v2v3search-0.nuget.org/query?q=some-package-query&prerelease=false&take=100&skip=0](https://api-v2v3search-0.nuget.org/query?q=some-package-query&prerelease=false&take=100&skip=0)(replacing `some-package-query` with whatever your search term is). As a mention, the [https://api-v2v3search-0.nuget.org/query](https://api-v2v3search-0.nuget.org/query) URL comes from nuget's API URL list, [https://api.nuget.org/v3/index.json](https://api.nuget.org/v3/index.json).\r\n> 3. Paste the JSON into a site like [http://www.jsonquerytool.com/#/Lodash](http://www.jsonquerytool.com/#/Lodash), replacing the extraction query with the following:\r\n> ```js\r\n> _.chain(input)\r\n>     .result('data')\r\n>     .values()\r\n>     .map(x => ({\r\n>         id: x.id,\r\n>         version: x.version,\r\n>         description: x.description,\r\n>         title: x.title,\r\n>         totalDownloads: x.totalDownloads,\r\n>         url: 'https://www.nuget.org/packages/' + x.id\r\n>     }))\r\n>     .sortBy('totalDownloads')\r\n>     .reverse()\r\n>     .value();\r\n> ```\r\n> 4. Select the package and access it's respective URL for more info.\r\n> \r\n> The official way of doing this is described [here](https://stackoverflow.com/questions/29863508/how-to-find-nuget-package-sort-by-most-downloaded-using-the-console), but I could not make it work, not even using `totalDownloads` as a column.\r\n> \r\n\r\n_Originally posted by @kinkoazc in https://github.com/NuGet/Home/issues/1739#issuecomment-490421573_"},{"Id":"12317795202","Type":"IssuesEvent","CreatedAt":"2020-05-12T23:07:08","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9555","RelatedDescription":"Opened issue \"ComputeSignature is silent by default in .NET Core, which disables PIN prompts\" (#9555) at NuGet/Home","RelatedBody":"The current overload of ComputeSignature changed meaning between .NET Framework and .NET Core. In .NET Core, the context is silent by default, which won't enable PIN prompts for smart cards/usb tokens that require it. false must be passed in to enable that if applicable.\r\n\r\nWill block code signing from working from most USB thumb drives if not set.\r\n"},{"Id":"12317607215","Type":"IssuesEvent","CreatedAt":"2020-05-12T22:38:26","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/1739","RelatedDescription":"Reopened issue \"Really need package sorting options\" (#1739) at NuGet/Home","RelatedBody":"In the VS Package Manager there is no sorting being applied that I can tell. This make it really hard for even simple projects when the # of packages gets larger than a single screen.  It gets worse as you combine multiple package sources.  When trying to find a package (installed, updateable, etc) you end up having to search for it rather than quickly scanning down the list of packages.\n"},{"Id":"12316963941","Type":"IssuesEvent","CreatedAt":"2020-05-12T21:16:07","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9554","RelatedDescription":"Opened issue \"Update Operation remoted in VS.Oe\" (#9554) at NuGet/Home","RelatedBody":""},{"Id":"12316958933","Type":"IssuesEvent","CreatedAt":"2020-05-12T21:15:30","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9553","RelatedDescription":"Opened issue \"Uninstall Operation remoted in VS.Oe\" (#9553) at NuGet/Home","RelatedBody":""},{"Id":"12316812146","Type":"IssuesEvent","CreatedAt":"2020-05-12T20:58:25","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9552","RelatedDescription":"Opened issue \"PMUI Consolidate Tab in VS.Oe\" (#9552) at NuGet/Home","RelatedBody":""},{"Id":"12316806926","Type":"IssuesEvent","CreatedAt":"2020-05-12T20:57:49","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9551","RelatedDescription":"Opened issue \"PMUI Update Tab in VS.Oe\" (#9551) at NuGet/Home","RelatedBody":""},{"Id":"12316795987","Type":"IssuesEvent","CreatedAt":"2020-05-12T20:56:32","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9550","RelatedDescription":"Opened issue \"PMUI Install Tab in VS.Oe\" (#9550) at NuGet/Home","RelatedBody":""},{"Id":"12316519296","Type":"IssuesEvent","CreatedAt":"2020-05-12T20:25:28","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9517","RelatedDescription":"Closed issue \"create vs.oe feature branch\" (#9517) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\n\n## Before posting the issue...\n\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\n\nRemove the content above here and fill out details below.\n\n## Details about Problem\n\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\n\nNuGet version (x.x.x.xxx):\n\ndotnet.exe --version (if appropriate):\n\nVS version (if appropriate):\n\nOS version (i.e. win10 v1607 (14393.321)):\n\nWorked before? If so, with which NuGet version:\n\n## Detailed repro steps so we can see the same problem\n\n1.\n\n2.\n\n...\n\n## Other suggested things\n\n### Verbose Logs\n\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\n\n### Sample Project\n\nVery helpful if you can zip a project and paste into this issue!\n\n"},{"Id":"12315198794","Type":"IssuesEvent","CreatedAt":"2020-05-12T18:03:55","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9549","RelatedDescription":"Opened issue \"[CPVM] Spurious package downgrades for multiple p2p projects \" (#9549) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nIn the restore graph that has multiple project to project references a package that is direct reference can cause downgrade error. \r\n\r\n## Detailed repro steps so we can see the same problem\r\nDownload the attached project\r\nExecute : \r\ncd DuplicateCPVMNodes\\DuplicateCPVMNodes\r\nmsbuild /t:restore DuplicateCPVMNodes.csproj\r\n\r\n### Sample Project\r\n\r\n[DuplicateCPVMNodes.zip](https://github.com/NuGet/Home/files/4617588/DuplicateCPVMNodes.zip)\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"12187224295","Type":"IssuesEvent","CreatedAt":"2020-04-29T00:36:47","Actor":"chgill-MSFT","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/43","RelatedDescription":"Opened issue \"Showing dependent packages on NuGet.org\" (#43) at NuGet/Announcements","RelatedBody":"The spec for 'Showing dependent packages on NuGet.org (Used By)' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Showing dependent packages on NuGet.org (Used By)](https://github.com/NuGet/Home/wiki/Showing-dependent-packages-on-NuGet.org-(Used-By)) | https://github.com/NuGet/NuGetGallery/issues/4718|"},{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org â€“ Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed toâ€¦ https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2020-05-13T05:30:38.4204211Z","RunDurationInMilliseconds":1641}