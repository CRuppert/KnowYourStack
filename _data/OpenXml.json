{"Data":{"Sdk":{"Events":[{"Id":"12304160438","Type":"IssuesEvent","CreatedAt":"2020-05-11T20:00:12","Actor":"no-response[bot]","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/675","RelatedDescription":"Closed issue \"cx:chartSpace is Missing\" (#675) at OfficeDev/Open-XML-SDK","RelatedBody":"**cx:chartSpace is Missing**\r\n\r\nWhen trying to create a histogram chart (an example of an extended chart) in office the cx:chartSpace xml element is required. A C# class for this exists in an uncompiled test which is named `DocumentFormat.OpenXml.Office2016.Drawing.ChartDrawing.ChartSpace`. For some reason this class isn't included in the sdk.\r\n\r\n**Information**\r\n\r\n- .NET Framework\r\n- DocumentFormat.OpenXml Version: 2.10\r\n\r\n**Repro**\r\n\r\n```csharp\r\nDrawingsPart drawingsPart = ...;\r\nvar extendedChartPart = drawingsPart.AddNewPart<ExtendedChartPart>();\r\n\r\n\\\\I want the below line to work, but the ChartSpace element doesn't exist. Also it would be nice to be able to call extendedChartPart.ChartSpace = rather than extendedChartPart.RootElement =\r\nextendedChartPart.RootElement = new DocumentFormat.OpenXml.Office2016.Drawing.ChartDrawing.ChartSpace();\r\n``` \r\n\r\n**Observed**\r\n\r\nIt doesn't compile and there doesn't seem to be an easy workaround\r\n"},{"Id":"12304160206","Type":"IssuesEvent","CreatedAt":"2020-05-11T20:00:11","Actor":"no-response[bot]","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/674","RelatedDescription":"Closed issue \"PPTX Sunburst chart?\" (#674) at OfficeDev/Open-XML-SDK","RelatedBody":"How would I go about creating a sunburst chart using OpenXML SDK? I tried reflecting it using the Productivity Tool but it would seem it does not support it correctly, and the chart itself is an image embedded into the PPTX. Seems to be stored very much differently than other types of charts.\r\n\r\nI know this is a question and not a bug, but SO is entirely unhelpful in answering new questions, I tried asking and they just outright closed my question."},{"Id":"12301093375","Type":"PullRequestEvent","CreatedAt":"2020-05-11T14:55:22","Actor":"igitur","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/716","RelatedDescription":"Opened pull request \"Rename StrictTranslation to StrictRelationshipFound and make public\" (#716) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #711 \r\n\r\nThis PR firstly renames `StrictTranslation` to `StrictRelationshipFound` and secondly makes the `OpenXmlPackage.StrictRelationshipFound` property public (from internal).\r\n\r\nThis will provide a hint to subsequent parsers that it may need to support strict mode parsing."},{"Id":"12286847957","Type":"IssuesEvent","CreatedAt":"2020-05-09T09:24:45","Actor":"lindexi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/715","RelatedDescription":"Opened issue \"One illegal uri in Relationship will destroy the document parsing\" (#715) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nThe PPTX document that include an illegal uri in Relationship will make the `System.IO.Packaging.InternalRelationshipCollection.ProcessRelationshipAttributes` throw an exception to  `OpenXmlPart.Load`.\r\n\r\nAnd the `OpenXmlPart.Load` can not catch the exception and it will break the `PresentationDocument.Open`.\r\n\r\n**Information**\r\n\r\n- .NET Target: All\r\n- DocumentFormat.OpenXml Version: 2.10.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\nvar document = PresentationDocument.Open(\"hyperlink.pptx\", isEditable: false, openSettings)\r\n``` \r\n\r\nHere is the hyperlink.pptx file : https://1drv.ms/p/s!AiKjiQqRWKThlv5zkY4HoRvvJ3Ppdg?e=3kfdNU \r\n\r\n**Observed**\r\n\r\nThe PresentationDocument.Open throw the UriFormatException exception\r\n\r\n```\r\nSystem.UriFormatException: 'Invalid URI: The hostname could not be parsed.'\r\n```\r\n\r\nBecause the ppt\\slides\\_rels\\slide1.xml.rels contain this string\r\n\r\n```xml\r\n<Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"mailto:!@#$%^&amp;*()_+}{:”?&gt;&lt;,./;’[]=-098766554321\" TargetMode=\"External\"/>\r\n```\r\n\r\nAs you can see, the `Target` is not an uri.\r\n\r\n**Expected**\r\n\r\nWe can design an exception handle API, and we can handle some illegal document.\r\n\r\nSee #38 #297 #298 \r\n\r\nAnd the #298 only add more information but can not tolerate errors.\r\n"},{"Id":"12277153958","Type":"PullRequestEvent","CreatedAt":"2020-05-08T07:17:51","Actor":"lindexi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/714","RelatedDescription":"Opened pull request \"Add TryGetPartById\" (#714) at OfficeDev/Open-XML-SDK","RelatedBody":"Fix #712"},{"Id":"12277112297","Type":"IssuesEvent","CreatedAt":"2020-05-08T07:12:08","Actor":"lindexi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/713","RelatedDescription":"Opened issue \"The OpenXmlPartContainer.DeletePart will throw exception when the id not found\" (#713) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nAs we can see the OpenXmlPartContainer.DeletePart can delete the part, but this API will throw ArgumentOutOfRangeException when the part with the specified id does not exist.\r\n\r\nBecause the `DeletePart` call the `DeletePartCore` which will call the `GetPartById` to get the part.\r\n\r\nhttps://github.com/OfficeDev/Open-XML-SDK/blob/0f1764a866e36d615e22d247e780fb7675046e9a/src/DocumentFormat.OpenXml/Packaging/OpenXmlPartContainer.cs#L1762\r\n\r\nBut the `GetPartById` will throw ArgumentOutOfRangeException when the part with the specified id does not exist.\r\n\r\nhttps://github.com/OfficeDev/Open-XML-SDK/blob/0f1764a866e36d615e22d247e780fb7675046e9a/src/DocumentFormat.OpenXml/Packaging/OpenXmlPartContainer.cs#L529-L547\r\n\r\nYes, it means that the branch will never enter when the id not found\r\n\r\nhttps://github.com/OfficeDev/Open-XML-SDK/blob/0f1764a866e36d615e22d247e780fb7675046e9a/src/DocumentFormat.OpenXml/Packaging/OpenXmlPartContainer.cs#L1764-L1768\r\n\r\n**Information**\r\n\r\n- .NET Target: All \r\n- DocumentFormat.OpenXml Version: 2.10.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\npublic static void Delete(this string id, OpenXmlPart part)\r\n{\r\n     part.DeletePart(id);\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nThe `part.DeletePart` will throw the exception when the part with the specified id does not exist.\r\n\r\n**Expected**\r\n\r\nAs the other API design, the delete method should not throw exception the element does not exist.\r\n"},{"Id":"12276967819","Type":"IssuesEvent","CreatedAt":"2020-05-08T06:51:41","Actor":"lindexi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/712","RelatedDescription":"Opened issue \"Add the TryGetPartById to OpenXmlPartContainer\" (#712) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nWe read some document which may lost some resource and as we know, the `OpenXmlPartContainer.GetPartById` will throw when the part with the specified id does not exist. And we can not find any API to check the specified id exist\r\n\r\n**Information**\r\n\r\n- .NET Target:  All\r\n- DocumentFormat.OpenXml Version: 2.10.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\n        public static void ToBrush(this BlipFill fill, OpenXmlPart part)\r\n        {           \r\n            if (fill.Blip != null && fill.Blip.Embed != null && fill.Blip.Embed.HasValue)\r\n            {\r\n                // System.ArgumentOutOfRangeException: 'Specified argument was out of the range of valid values. (Parameter 'id')'\r\n                var imagePart = part.GetPartById(fill.Blip.Embed.Value);\r\n                \r\n            }\r\n``` \r\n\r\n**Observed**\r\n\r\nThe `GetPartById` throw ArgumentOutOfRangeException\r\n\r\n**Expected**\r\n\r\nWe can use TryGetPartById to get the resource\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2020-05-12T05:30:43.958654Z","RunDurationInMilliseconds":998}